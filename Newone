import org.springframework.http.*;
import org.springframework.web.client.RestTemplate;

public class ApiService {

    public String callGetApi(String accessToken) {
        String url = "https://example.com/protected-resource"; // Replace with the API URL
        RestTemplate restTemplate = new RestTemplate();

        // Set up the headers with the Bearer token
        HttpHeaders headers = new HttpHeaders();
        headers.setBearerAuth(accessToken); // Set the Authorization header with Bearer token

        // Create the request entity with the headers
        HttpEntity<String> requestEntity = new HttpEntity<>(headers);

        // Call the API using the GET method
        ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.GET, requestEntity, String.class);

        // Return the response body
        return response.getBody();
    }
}


lllllhhj

import org.springframework.web.reactive.function.client.WebClient;
import reactor.core.publisher.Mono;

public class ApiService {

    private final WebClient webClient = WebClient.create();

    public String callGetApi(String accessToken) {
        String url = "https://example.com/protected-resource"; // Replace with the API URL

        // Call the API with the Authorization Bearer token
        Mono<String> response = webClient.get()
                .uri(url)
                .headers(headers -> headers.setBearerAuth(accessToken)) // Set the Authorization header with Bearer token
                .retrieve()
                .bodyToMono(String.class);

        // Return the response body (blocking call for simplicity)
        return response.block();
    }
}

