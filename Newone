from zipfile import ZipFile
import os

# File structure and content
files = {
    "otp-service/src/main/java/com/example/otpservice/OtpServiceApplication.java": """\
package com.example.otpservice;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class OtpServiceApplication {

    public static void main(String[] args) {
        SpringApplication.run(OtpServiceApplication.class, args);
    }

}
""",

    "otp-service/src/main/java/com/example/otpservice/model/OTP.java": """\
package com.example.otpservice.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.Data;

import java.time.LocalDateTime;

@Data
@Entity
public class OTP {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    private String otp;
    private String mobileNumber;
    private LocalDateTime expiryTime;
}
""",

    "otp-service/src/main/java/com/example/otpservice/repository/OTPRepository.java": """\
package com.example.otpservice.repository;

import com.example.otpservice.model.OTP;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Optional;

public interface OTPRepository extends JpaRepository<OTP, Long> {
    Optional<OTP> findByMobileNumber(String mobileNumber);
}
""",

    "otp-service/src/main/java/com/example/otpservice/service/OTPService.java": """\
package com.example.otpservice.service;

import com.example.otpservice.model.OTP;
import com.example.otpservice.repository.OTPRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.security.SecureRandom;
import java.time.LocalDateTime;
import java.util.Optional;

@Service
public class OTPService {

    @Autowired
    private OTPRepository otpRepository;

    private static final int OTP_VALIDITY_MINUTES = 5;
    private SecureRandom secureRandom = new SecureRandom();

    public OTP generateOTP(String mobileNumber) {
        String otp = String.format("%06d", secureRandom.nextInt(999999));
        LocalDateTime expiryTime = LocalDateTime.now().plusMinutes(OTP_VALIDITY_MINUTES);

        OTP otpEntity = new OTP();
        otpEntity.setOtp(otp);
        otpEntity.setMobileNumber(mobileNumber);
        otpEntity.setExpiryTime(expiryTime);

        otpRepository.save(otpEntity);
        return otpEntity;
    }

    public boolean verifyOTP(String mobileNumber, String otp) {
        Optional<OTP> otpEntityOpt = otpRepository.findByMobileNumber(mobileNumber);

        if (otpEntityOpt.isPresent()) {
            OTP otpEntity = otpEntityOpt.get();
            if (otpEntity.getOtp().equals(otp) && otpEntity.getExpiryTime().isAfter(LocalDateTime.now())) {
                otpRepository.delete(otpEntity);
                return true;
            }
        }
        return false;
    }
}
""",

    "otp-service/src/main/java/com/example/otpservice/service/DummyOTPService.java": """\
package com.example.otpservice.service;

import com.example.otpservice.model.OTP;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class DummyOTPService {

    private static final String DUMMY_OTP = "123456";
    private static final int OTP_VALIDITY_MINUTES = 5;

    public OTP generateDummyOTP(String mobileNumber) {
        OTP otpEntity = new OTP();
        otpEntity.setOtp(DUMMY_OTP);
        otpEntity.setMobileNumber(mobileNumber);
        otpEntity.setExpiryTime(LocalDateTime.now().plusMinutes(OTP_VALIDITY_MINUTES));

        return otpEntity;
    }

    public boolean verifyDummyOTP(String mobileNumber, String otp) {
        return DUMMY_OTP.equals(otp);
    }
}
""",

    "otp-service/src/main/java/com/example/otpservice/controller/OTPController.java": """\
package com.example.otpservice.controller;

import com.example.otpservice.model.OTP;
import com.example.otpservice.service.OTPService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/otp")
public class OTPController {

    @Autowired
    private OTPService otpService;

    @PostMapping("/generate")
    public OTP generateOTP(@RequestBody String mobileNumber) {
        return otpService.generateOTP(mobileNumber);
    }

    @PostMapping("/verify")
    public boolean verifyOTP(@RequestBody OTP otpRequest) {
        return otpService.verifyOTP(otpRequest.getMobileNumber(), otpRequest.getOtp());
    }
}
""",

    "otp-service/src/main/java/com/example/otpservice/controller/DummyOTPController.java": """\
package com.example.otpservice.controller;

import com.example.otpservice.model.OTP;
import com.example.otpservice.service.DummyOTPService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/dummy-otp")
public class DummyOTPController {

    @Autowired
    private DummyOTPService dummyOTPService;

    @PostMapping("/generate")
    public OTP generateDummyOTP(@RequestBody String mobileNumber) {
        return dummyOTPService.generateDummyOTP(mobileNumber);
    }

    @PostMapping("/verify")
    public boolean verifyDummyOTP(@RequestBody OTP otpRequest) {
        return dummyOTPService.verifyDummyOTP(otpRequest.getMobileNumber(), otpRequest.getOtp());
    }
}
""",
}

# Create zip file
zip_file_path = '/mnt/data/otp-service.zip
