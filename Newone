package com.example.otp.controller;

import com.example.otp.service.OTPService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpSession;

@Controller
public class OTPController {

    @Autowired
    private OTPService otpService;

    @GetMapping("/")
    public String showForm() {
        return "userDetails";
    }

    @PostMapping("/sendOTP")
    public String sendOTP(@RequestParam String mobileNumber, @RequestParam String email, HttpSession session, Model model) {
        String mobileOTP = otpService.generateOTP();
        String emailOTP = otpService.generateOTP();

        // Save OTPs in session (or database)
        session.setAttribute("mobileOTP", mobileOTP);
        session.setAttribute("emailOTP", emailOTP);

        // Send OTP to mobile (implement sendSMS method in OTPService)
        // otpService.sendSMS(mobileNumber, mobileOTP);

        // Send OTP to email
        otpService.sendEmail(email, emailOTP);

        model.addAttribute("message", "OTP sent to mobile and email");
        return "userDetails";
    }

    @PostMapping("/verifyOTP")
    public String verifyOTP(@RequestParam String mobileOTP, @RequestParam String emailOTP, HttpSession session, Model model) {
        String sessionMobileOTP = (String) session.getAttribute("mobileOTP");
        String sessionEmailOTP = (String) session.getAttribute("emailOTP");

        if (mobileOTP.equals(sessionMobileOTP) && emailOTP.equals(sessionEmailOTP)) {
            model.addAttribute("message", "OTP verified successfully");
            return "success";
        } else {
            model.addAttribute("message", "Invalid OTP");
            return "userDetails";
        }
    }
}
xyz


package com.example.otp.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

import java.util.Random;

@Service
public class OTPService {

    @Autowired
    private JavaMailSender mailSender;

    private final Random random = new Random();
    
    public String generateOTP() {
        return String.format("%06d", random.nextInt(1000000));
    }

    public void sendEmail(String to, String otp) {
        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(to);
        message.setSubject("Your OTP Code");
        message.setText("Your OTP code is: " + otp);
        mailSender.send(message);
    }

    // Implement sendSMS() method to send SMS using your preferred SMS gateway
}

xyz
package com.example.otp.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

import java.util.Random;

@Service
public class OTPService {

    @Autowired
    private JavaMailSender mailSender;

    private final Random random = new Random();
    
    public String generateOTP() {
        return String.format("%06d", random.nextInt(1000000));
    }

    public void sendEmail(String to, String otp) {
        SimpleMailMessage message = new SimpleMailMessage();
        message.setTo(to);
        message.setSubject("Your OTP Code");
        message.setText("Your OTP code is: " + otp);
        mailSender.send(message);
    }

    // Implement sendSMS() method to send SMS using your preferred SMS gateway
}

xyz
package com.example.otp.controller;

import com.example.otp.service.OTPService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpSession;

@Controller
public class OTPController {

    @Autowired
    private OTPService otpService;

    @GetMapping("/")
    public String showForm() {
        return "userDetails";
    }

    @PostMapping("/sendOTP")
    public String sendOTP(@RequestParam String mobileNumber, @RequestParam String email, HttpSession session, Model model) {
        String mobileOTP = otpService.generateOTP();
        String emailOTP = otpService.generateOTP();

        // Save OTPs in session (or database)
        session.setAttribute("mobileOTP", mobileOTP);
        session.setAttribute("emailOTP", emailOTP);

        // Send OTP to mobile (implement sendSMS method in OTPService)
        // otpService.sendSMS(mobileNumber, mobileOTP);

        // Send OTP to email
        otpService.sendEmail(email, emailOTP);

        model.addAttribute("message", "OTP sent to mobile and email");
        return "userDetails";
    }

    @PostMapping("/verifyOTP")
    public String verifyOTP(@RequestParam String mobileOTP, @RequestParam String emailOTP, HttpSession session, Model model) {
        String sessionMobileOTP = (String) session.getAttribute("mobileOTP");
        String sessionEmailOTP = (String) session.getAttribute("emailOTP");

        if (mobileOTP.equals(sessionMobileOTP) && emailOTP.equals(sessionEmailOTP)) {
            model.addAttribute("message", "OTP verified successfully");
            return "success";
        } else {
            model.addAttribute("message", "Invalid OTP");
            return "userDetails";
        }
    }
}
